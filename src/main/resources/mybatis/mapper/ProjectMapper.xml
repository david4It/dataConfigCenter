<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ <<
  ~  Davinci
  ~  ==
  ~  Copyright (C) 2016 - 2019 EDP
  ~  ==
  ~  Licensed under the Apache License, Version 2.0 (the "License");
  ~  you may not use this file except in compliance with the License.
  ~  You may obtain a copy of the License at
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~   Unless required by applicable law or agreed to in writing, software
  ~   distributed under the License is distributed on an "AS IS" BASIS,
  ~   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~   See the License for the specific language governing permissions and
  ~   limitations under the License.
  ~  >>
  ~
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.scsme.dataConfigCenter.davinci.biz.dao.ProjectMapper">

    <resultMap id="ProjectWithCreateByResultMap" type="com.scsme.dataConfigCenter.davinci.biz.dto.projectDto.ProjectWithCreateBy">
        <id column="id" property="id" />
        <result column="isStar" property="isStar" />
        <result column="createBy.id" property="createBy.id" />
        <result column="createBy.username" property="createBy.username" />
        <result column="createBy.avatar" property="createBy.avatar" />

        <result column="name" property="name" />
        <result column="description" property="description" />
        <result column="pic" property="pic" />
        <result column="org_id" property="orgId" />
        <result column="user_id" property="userId" />
        <result column="star_num" property="starNum" />
        <result column="visibility" property="visibility" />
        <result column="is_transfer" property="isTransfer" />
        <result column="initial_org_id" property="initialOrgId" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="update_by" property="updateBy" />

        <result property="config" column="config" typeHandler="com.scsme.dataConfigCenter.davinci.core.handler.JsonTypeHandler"/>
    </resultMap>

    <resultMap id="ProjectDetailResultMap" type="com.scsme.dataConfigCenter.davinci.biz.dto.projectDto.ProjectDetail">
        <id column="id" property="id" />
        <result column="createBy.id" property="createBy.id" />
        <result column="createBy.username" property="createBy.username" />
        <result column="createBy.avatar" property="createBy.avatar" />

        <result column="daav_tenant.name" property="daav_tenant.name" />
        <result column="daav_tenant.description" property="daav_tenant.description" />
        <result column="daav_tenant.avatar" property="daav_tenant.avatar" />
        <result column="daav_tenant.userId" property="daav_tenant.userId" />
        <result column="daav_tenant.projectNum" property="daav_tenant.projectNum" />
        <result column="daav_tenant.memberNum" property="daav_tenant.memberNum" />
        <result column="daav_tenant.roleNum" property="daav_tenant.roleNum" />
        <result column="daav_tenant.allowCreateProject" property="daav_tenant.allowCreateProject" />
        <result column="daav_tenant.memberPermission" property="daav_tenant.memberPermission" />
        <result column="daav_tenant.createTime" property="daav_tenant.createTime" />
        <result column="daav_tenant.createBy" property="daav_tenant.createBy" />
        <result column="daav_tenant.updateTime" property="daav_tenant.updateTime" />
        <result column="daav_tenant.updateBy" property="daav_tenant.updateBy" />

        <result column="name" property="name" />
        <result column="description" property="description" />
        <result column="pic" property="pic" />
        <result column="org_id" property="orgId" />
        <result column="user_id" property="userId" />
        <result column="star_num" property="starNum" />
        <result column="visibility" property="visibility" />
        <result column="is_transfer" property="isTransfer" />
        <result column="initial_org_id" property="initialOrgId" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="update_by" property="updateBy" />
        <result column="create_user_id" property="createUserId" />

        <result property="config" column="config" typeHandler="com.scsme.dataConfigCenter.davinci.core.handler.JsonTypeHandler"/>
    </resultMap>

    <insert id="insert" parameterType="com.scsme.dataConfigCenter.davinci.biz.model.DaavProject">
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert daav_project
        <trim prefix="(" suffix=")" suffixOverrides=",">
            `name`,
            <if test="description != null">
            `description`,
            </if>
            <if test='pic != null and pic != "" '>
                `pic`,
            </if>
            `org_id`,
            `user_id`,
            `visibility`,
            `is_transfer`,
            `initial_org_id`,
            `create_time`,
            `create_by`
        </trim>
        values
        <trim prefix=" (" suffix=")" suffixOverrides=",">
            #{name, jdbcType=VARCHAR},
            <if test="description != null">
                #{description, jdbcType=VARCHAR},
            </if>
            <if test='pic != null and pic != "" '>
                #{pic, jdbcType=VARCHAR},
            </if>
            #{orgId, jdbcType=BIGINT},
            #{userId, jdbcType=BIGINT},
            #{visibility, jdbcType=TINYINT},
            #{isTransfer, jdbcType=TINYINT},
            #{orgId, jdbcType=BIGINT},
            #{createTime, jdbcType=TIMESTAMP},
            #{createUserId, jdbcType=BIGINT}
        </trim>
    </insert>

    <delete id="deleteBeforOrgRole">
        delete
        from daav_rel_role_project
        where project_id = #{projectId}
          and role_id in (select id from daav_role where org_id = #{orgId});

        delete
        from daav_rel_role_dashboard_widget
        where role_id in (select id from daav_role where org_id = #{orgId})
          and mem_dashboard_widget_id in (
            select id
            from daav_mem_dashboard_widget
            where dashboard_id in (
                select d.id
                from daav_dashboard d
                         inner join daav_dashboard_portal dp on dp.id = d.dashboard_portal_id
                where dp.project_id = #{projectId}
            )
        );

        delete
        from daav_rel_role_dashboard
        where role_id in (select id from daav_role where org_id = #{orgId})
          and dashboard_id in (
            select d.id
            from daav_dashboard d
                     inner join daav_dashboard_portal dp on dp.id = d.dashboard_portal_id
            where dp.project_id = #{projectId}
        );


        delete
        from daav_rel_role_portal
        where role_id in (select id from daav_role where org_id = #{orgId})
          and portal_id in (select id from daav_dashboard_portal where project_id = #{projectId});

        delete
        from daav_rel_role_display_slide_widget
        where role_id in (select id from daav_role where org_id = #{orgId})
          and mem_display_slide_widget_id in (select m.id
                                              from daav_mem_display_slide_widget m
                                                       right join daav_display_slide s on s.id = m.display_slide_id
                                                       right join daav_display d on d.id = s.display_id
                                              where d.project_id = #{projectId});


        delete
        from daav_rel_role_slide
        where role_id in (select id from daav_role where org_id = #{orgId})
          and slide_id in (select s.id
                           from daav_display_slide s
                                    right join daav_display d on d.id = s.display_id and d.project_id = #{projectId});

        delete
        from daav_rel_role_display
        where role_id in (select id from daav_role where org_id = #{orgId})
          and display_id in (select id from daav_display where project_id = #{projectId});


        delete
        from daav_rel_role_view
        where role_id in (select id from daav_role where org_id = #{orgId})
          and view_id in (select id from view where project_id = #{projectId});

        delete
        from daav_rel_project_admin
        where project_id = #{projectId};


    </delete>


    <sql id="selectProjectByUserBaseSql">
        SELECT p.*,
        IF(s.`id` is NULL, FALSE, TRUE) as 'isStar',
        u.`id` as 'createBy.id',
        IF(u.`name` is NULL, u.`username`, u.`name`) as 'createBy.username',
        u.`avatar` as 'createBy.avatar'
        from daav_project p
        left join `daav_user` u on u.`id` = p.`user_id`
        left join daav_star s on (s.target_id = p.id and s.`target` = 'daav_project' and s.user_id = #{userId})
        where p.id in (
        <!-- 当前用户是project的创建者或管理员 -->
        select DISTINCT p.id
        from daav_project p
        left join daav_rel_project_admin rpa on rpa.project_id = p.id
        where p.user_id = #{userId} or rpa.user_id = #{userId}

        union all

        <!-- 当前用户权限关联的project -->
        select DISTINCT p.id
        from daav_project p
        left join daav_rel_role_project rrp on rrp.project_id = p.id
        left join daav_rel_role_user rru on rru.role_id = rrp.role_id
        where rru.user_id = #{userId}


        union all

        <!--当前用户是project所在org的owner-->
        select DISTINCT p.id
        from daav_project p
        left join daav_rel_user_tenant ruo on ruo.org_id = p.org_id
        left join daav_tenant o on o.id = p.org_id
        where o.user_id = #{userId}

        union all

        <!--当前org 下project对普通成员可见-->

        select DISTINCT p.id
        from daav_project p
        left join daav_rel_user_tenant ruo on ruo.org_id = p.org_id
        left join daav_tenant o on o.id = p.org_id
        where ruo.user_id = #{userId} and (ruo.role = 1 or (p.visibility = 1 and o.member_permission = 1))
        )
    </sql>


    <select id="getProjectsByKewordsWithUser" resultType="com.scsme.dataConfigCenter.davinci.biz.dto.projectDto.ProjectWithCreateBy">
        <include refid="selectProjectByUserBaseSql"></include>
        <if test="orgList != null">
            AND p.org_id IN
            <foreach collection="orgList" index="index" item="item" open="(" close=")" separator=",">
                #{item.id}
            </foreach>
        </if>
        <if test="keywords != null">
            AND LOWER(p.`name`) LIKE CONCAT(CONCAT('%', LOWER(#{keywords})), '%')
        </if>
        ORDER BY p.id
    </select>


    <select id="getProjectsByOrgWithUser" resultMap="ProjectWithCreateByResultMap">
        <include refid="selectProjectByUserBaseSql"></include>
        <if test="orgId != null">
            and p.org_id = #{orgId}
        </if>
        <if test="keyword != null">
            AND LOWER(p.`name`) LIKE CONCAT(CONCAT('%', LOWER(#{keyword})), '%')
        </if>
        ORDER BY p.id
    </select>


    <select id="getProejctsByUser" resultType="com.scsme.dataConfigCenter.davinci.biz.dto.projectDto.ProjectWithCreateBy">
        <include refid="selectProjectByUserBaseSql"></include>
        order by p.id
    </select>


    <select id="getFavoriteProjects" resultType="com.scsme.dataConfigCenter.davinci.biz.dto.projectDto.ProjectWithCreateBy">
        select t.* from (
        <include refid="selectProjectByUserBaseSql"></include>
        ) t LEFT JOIN daav_favorite f on t.id = f.project_id
        where f.user_id = #{userId}
        order by t.id
    </select>


    <select id="getProjectIdsByAdmin" resultType="java.lang.Long">
        select p.id
        from daav_project p
                 left join daav_rel_project_admin rpa on rpa.project_id = p.id
        where p.user_id = #{userId}
           or rpa.user_id = #{userId}
        union
        select p.id
        from daav_project p
                 left join daav_rel_user_tenant ruo on ruo.org_id = p.org_id
                 left join daav_tenant o on o.id = p.org_id
        where o.user_id = #{userId}
           or (ruo.user_id = #{userId} and ruo.role > 0)
    </select>

    <select id="getProjectDetail" resultMap="ProjectDetailResultMap">
        SELECT p.*,
               u.`id`                                       AS 'createBy.id',
               IF(u.`name` is NULL, u.`username`, u.`name`) AS 'createBy.username',
               u.`avatar`                                   AS 'createBy.avatar',
               o.`id`                                       AS 'daav_tenant.id',
               o.`name`                                     AS 'daav_tenant.name',
               o.`description`                              AS 'daav_tenant.description',
               o.`avatar`                                   AS 'daav_tenant.avatar',
               o.`user_id`                                  AS 'daav_tenant.userId',
               o.`project_num`                              AS 'daav_tenant.projectNum',
               o.`member_num`                               AS 'daav_tenant.memberNum',
               o.`role_num`                                 AS 'daav_tenant.role_num',
               o.`allow_create_project`                     AS 'daav_tenant.allowCreateProject',
               o.`member_permission`                        AS 'daav_tenant.memberPermission',
               o.`create_time`                              AS 'daav_tenant.createTime',
               o.`create_by`                                AS 'daav_tenant.createBy',
               o.`update_time`                              AS 'daav_tenant.updateTime',
               o.`update_by`                                AS 'daav_tenant.updateBy'
        FROM daav_project p
                 LEFT JOIN daav_tenant o on o.`id` = p.`org_id`
                 LEFT JOIN `daav_user` u on u.`id` = p.`user_id`
        WHERE p.`id` = #{id}
    </select>

    <select id="getProjectDetailByDashboardId" resultMap="ProjectDetailResultMap">
        SELECT p.*,
               p.create_by                                  as 'create_user_id',
               u.`id`                                       AS 'createBy.id',
               IF(u.`name` is NULL, u.`username`, u.`name`) AS 'createBy.username',
               u.`avatar`                                   AS 'createBy.avatar',
               o.`id`                                       AS 'daav_tenant.id',
               o.`name`                                     AS 'daav_tenant.name',
               o.`description`                              AS 'daav_tenant.description',
               o.`avatar`                                   AS 'daav_tenant.avatar',
               o.`user_id`                                  AS 'daav_tenant.userId',
               o.`project_num`                              AS 'daav_tenant.projectNum',
               o.`member_num`                               AS 'daav_tenant.memberNum',
               o.`role_num`                                 AS 'daav_tenant.roleNum',
               o.`allow_create_project`                     AS 'daav_tenant.allowCreateProject',
               o.`member_permission`                        AS 'daav_tenant.memberPermission',
               o.`create_time`                              AS 'daav_tenant.createTime',
               o.`create_by`                                AS 'daav_tenant.createBy',
               o.`update_time`                              AS 'daav_tenant.updateTime',
               o.`update_by`                                AS 'daav_tenant.updateBy'
        FROM daav_tenant o, daav_user u, daav_project p, daav_dashboard_portal dp, daav_dashboard d
        WHERE o.id = p.org_id
        and u.id = p.user_id
        and p.id = dp.project_id
        and dp.id = d.dashboard_portal_id
        and  d.id = #{dashboardId}

    </select>

</mapper>
